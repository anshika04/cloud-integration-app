apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  namespace: cloud-integration
  labels:
    app: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: gcr.io/your-project-id/cloud-integration-app:latest
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "prod"
        - name: DB_HOST
          value: "postgres-service"
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          value: "cloudintegration"
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: "/etc/gcp/credentials.json"
        - name: GCP_PROJECT_ID
          valueFrom:
            configMapKeyRef:
              name: gcp-config
              key: project-id
        - name: AZURE_KEYVAULT_URL
          valueFrom:
            configMapKeyRef:
              name: azure-config
              key: keyvault-url
        - name: SPLUNK_HOST
          valueFrom:
            configMapKeyRef:
              name: splunk-config
              key: host
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/cloud/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/cloud/health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: gcp-credentials
          mountPath: /etc/gcp
          readOnly: true
      volumes:
      - name: gcp-credentials
        secret:
          secretName: gcp-service-account
