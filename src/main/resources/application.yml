server:
  port: 8080
  servlet:
    context-path: /api

spring:
  application:
    name: cloud-integration-app
  profiles:
    active: dev
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: password
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
  h2:
    console:
      enabled: true
      path: /h2-console
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI:https://login.microsoftonline.com/your-tenant-id/v2.0}

# Azure Configuration
azure:
  keyvault:
    url: ${AZURE_KEYVAULT_URL:https://your-keyvault.vault.azure.net/}
  storage:
    account-name: ${AZURE_STORAGE_ACCOUNT:your-storage-account}
    container-name: ${AZURE_STORAGE_CONTAINER:your-container}
  queue:
    name: ${AZURE_QUEUE_NAME:your-queue}

# GCP Configuration
gcp:
  project-id: ${GCP_PROJECT_ID:your-project-id}
  storage:
    bucket-name: ${GCP_STORAGE_BUCKET:your-bucket}
  pubsub:
    topic-name: ${GCP_PUBSUB_TOPIC:your-topic}
    subscription-name: ${GCP_PUBSUB_SUBSCRIPTION:your-subscription}

# Splunk Configuration
splunk:
  host: ${SPLUNK_HOST:localhost}
  port: ${SPLUNK_PORT:8089}
  username: ${SPLUNK_USERNAME:admin}
  password: ${SPLUNK_PASSWORD:changeme}
  index: ${SPLUNK_INDEX:main}

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# Logging
logging:
  level:
    com.example.cloudintegrationapp: DEBUG
    org.springframework.security: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:h2:mem:testdb
  jpa:
    hibernate:
      ddl-auto: create-drop

---
# Production Profile
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:cloudintegration}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:password}
  jpa:
    hibernate:
      ddl-auto: validate

---
# Docker Profile
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:postgresql://${DB_HOST:postgres}:${DB_PORT:5432}/${DB_NAME:cloudintegration}
    driver-class-name: org.postgresql.Driver
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:password}
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  security:
    oauth2:
      resourceserver:
        jwt:
          # Disable JWT validation in Docker environment
          issuer-uri: ""

# Docker-specific logging
logging:
  level:
    com.example.cloudintegrationapp: INFO
    org.springframework.security: INFO
    org.springframework.web: INFO
